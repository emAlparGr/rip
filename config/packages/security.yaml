# security:
#     # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
#     password_hashers:
#         Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
#     # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#     providers:
#         app_user_provider:
#             entity:
#                 class: App\Entity\User
#                 property: email
#         users_in_memory: { memory: null }
#     firewalls:
#         dev:
#             pattern: ^/(_(profiler|wdt)|css|images|js)/
#             security: false
#         main:
#             lazy: true
#             provider: users_in_memory
#             json_login:
#                 check_path: app_login
#             custom_authenticators:
#                 - App\Security\ApiKeyAuthenticator

#             # activate different ways to authenticate
#             # https://symfony.com/doc/current/security.html#firewalls-authentication

#             # https://symfony.com/doc/current/security/impersonating_user.html
#             # switch_user: true

#     # Easy way to control access for large sections of your site
#     # Note: Only the *first* access control that matches will be used
#     access_control:
#         # - { path: ^/admin, roles: ROLE_ADMIN }
#         # - { path: ^/profile, roles: ROLE_USER }

security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: apiToken
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            stateless: true
            provider: app_user_provider
            entry_point: App\Security\AuthenticationEntryPoint
            access_denied_handler: App\Security\AccessDeniedHandler
            custom_authenticators:
                - App\Security\ApiKeyAuthenticator
    access_control:
        - { path: ^/auth, roles: [] }
        - { path: ^/api/quotes/qget, roles: [] }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
